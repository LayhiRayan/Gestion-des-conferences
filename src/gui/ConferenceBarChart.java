/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import java.awt.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import connexion.Connexion;
import javax.swing.JOptionPane;

/**
 *
 * @author HP-PC
 */
public class ConferenceBarChart extends javax.swing.JInternalFrame {

    /**
     * Creates new form ConferenceBarChart
     */
    public ConferenceBarChart() {
         super("Statistiques des Intervenants par √âv√©nement"); // Titre seulement
    setClosable(true);
    setIconifiable(true);
    setMaximizable(true);
    setResizable(true);
    initComponents();
    afficherGraphique();
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chartPanel = new javax.swing.JPanel();
        btnAfficher = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nombre d‚Äôintervenants par conf√©rence");

        chartPanel.setBackground(new java.awt.Color(255, 255, 255));
        chartPanel.setLayout(new java.awt.BorderLayout());

        btnAfficher.setText("Afficher Graphique");
        btnAfficher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfficherActionPerformed(evt);
            }
        });
        chartPanel.add(btnAfficher, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnAfficherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfficherActionPerformed
DefaultCategoryDataset dataset = getDataFromDatabase();

    JFreeChart barChart = ChartFactory.createBarChart3D(
            "Nombre de Participations par √âv√©nement",
            "√âv√©nements",
            "Nombre de Participations",
            dataset,
            PlotOrientation.VERTICAL,
            true, true, false);

    // Personnalisation du graphique
    CategoryPlot plot = (CategoryPlot) barChart.getPlot();
    plot.setBackgroundPaint(Color.white);
    plot.setRangeGridlinePaint(Color.black);

    // Ajouter le graphique au JPanel chartPanel
    ChartPanel chartPanelGraph = new ChartPanel(barChart);
    chartPanelGraph.setSize(chartPanel.getWidth(), chartPanel.getHeight());
    chartPanelGraph.setVisible(true);

    chartPanel.removeAll();
    chartPanel.add(chartPanelGraph);
    chartPanel.revalidate();
    chartPanel.repaint();
    afficherGraphique();
     
    }//GEN-LAST:event_btnAfficherActionPerformed
    private void afficherGraphique() {
        DefaultCategoryDataset dataset = getDataFromDatabase();

        JFreeChart barChart = ChartFactory.createBarChart3D(
                "Nombre d‚ÄôIntervenants par √âv√©nement",
                "√âv√©nements",
                "Nombre d‚ÄôIntervenants",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        CategoryPlot plot = (CategoryPlot) barChart.getPlot();
        plot.setBackgroundPaint(Color.white);
        plot.setRangeGridlinePaint(Color.black);

        ChartPanel chartPanelGraph = new ChartPanel(barChart);
        chartPanel.removeAll();
        chartPanel.add(chartPanelGraph, BorderLayout.CENTER);
        chartPanel.revalidate();
        chartPanel.repaint();
    }
    
    private DefaultCategoryDataset getDataFromDatabase() {
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    String query = "SELECT e.titre AS evenement, COUNT(pe.intervenant_id) AS nb_intervenants " +
                   "FROM evenement e " +
                   "LEFT JOIN participation_evenement pe ON e.id = pe.evenement_id " +
                   "GROUP BY e.id, e.titre";

    try (Connection conn = Connexion.getInstance().getConnexion();
         PreparedStatement ps = conn.prepareStatement(query);
         ResultSet rs = ps.executeQuery()) {

        while (rs.next()) {
            String evenement = rs.getString("evenement");
            int nbIntervenants = rs.getInt("nb_intervenants");

            // üîπ Debug : V√©rifier si les √©v√©nements sont bien r√©cup√©r√©s
            System.out.println("√âv√©nement : " + evenement + " | Intervenants : " + nbIntervenants);

            dataset.addValue(nbIntervenants, "Intervenants", evenement);
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Erreur SQL : " + ex.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
    }

    return dataset;
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConferenceBarChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConferenceBarChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConferenceBarChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConferenceBarChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConferenceBarChart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAfficher;
    private javax.swing.JPanel chartPanel;
    // End of variables declaration//GEN-END:variables
}
